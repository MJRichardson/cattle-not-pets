# create a new environment for each pull-request

name: environment-create

on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-azure-infrastructure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/})"
        id: extract_branch
      
      # login to azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Create resource group
        uses: azure/CLI@v1
        with:
          inlineScript: |
            RESOURCEGROUPNAME=michrich-cattle-not-pets-${{steps.extract_branch.outputs.branch}}
            LOCATION="Australia Southeast"
            if [ $(az group exists --name $RESOURCEGROUPNAME) = false ]; then
              az group create --name $RESOURCEGROUPNAME --location "$LOCATION"
            fi
            
      - name: Replace parameters file
        uses: microsoft/variable-substitution@v1 
        with:
          files: './infra/azure-rg-params.json'
        env:
          parameters.branch.value: "${{steps.extract_branch.outputs.branch}}"

      - uses: azure/arm-deploy@v1
        with:
          resourceGroupName: michrich-cattle-not-pets-${{steps.extract_branch.outputs.branch}}
          template: ./infra/azure-rg.json
          parameters: ./infra/azure-rg-params.json
          
      - name: Install Octopus CLI 🐙
        uses: OctopusDeploy/install-octopus-cli-action@v1
        with:
          version: 7.4.3140

      - name: Create Octopus environment
        env:
          octopusUrl: "https://michrich.octopus.app/"
          branch: "${{steps.extract_branch.outputs.branch}}"
        run: >  
          octo create-environment --name="${{ env.branch }}" --server=${{ env.octopusUrl }} --space="Dynamic Infra" --apiKey=${{ secrets.OCTOPUS_API_KEY }}


